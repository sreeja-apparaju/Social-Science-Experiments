%!PS-Adobe-2.0 EPSF-2.0
%% This is a Stata generated postscript file
%%BoundingBox: 0 0 720 720
%%HiResBoundingBox: 0.000 0.000 720.000 720.000
%%DocumentNeededResources: font Helvetica
/xratio 0.022500 def
/yratio 0.022500 def
/Sbgfill {
	/y1 exch def
	/x1 exch def
	/y0 exch def
	/x0 exch def
	x0 y0 moveto
	x0 y1 lineto x1 y1 lineto x1 y0 lineto x0 y0 lineto
	fill
} def
/Spt {
	yratio mul
	/yp exch def
	xratio mul
	/xp exch def
	Slrgb setrgbcolor
	xp yp .5 0 360 arc fill
} def
/Sln {
	yratio mul
	/y1p exch def
	xratio mul
	/x1p exch def
	yratio mul
	/y0p exch def
	xratio mul
	/x0p exch def
	Slw setlinewidth
	Slrgb setrgbcolor
	x0p y0p M x1p y1p lineto S
} def
/Scrv {
	yratio mul
	/y3p exch def
	xratio mul
	/x3p exch def
	yratio mul
	/y2p exch def
	xratio mul
	/x2p exch def
	yratio mul
	/y1p exch def
	xratio mul
	/x1p exch def
	Slw setlinewidth
	Slrgb setrgbcolor
	x1p y1p x2p y2p x3p y3p curveto
	stroke
} def
/Stxtl {
	/sp exch def
	yratio mul
	/sizep exch def
	dup
	/anglep exch def
	0 exch sub
	/angle2p exch def
	yratio mul
	/y0p exch def
	xratio mul
	/x0p exch def
	Strgb setrgbcolor
	x0p y0p M anglep rotate sizep fntsize sp show stroke angle2p rotate
} def
/Stxtc {
	/sp exch def
	yratio mul
	/sizep exch def
	dup
	/anglep exch def
	0 exch sub
	/angle2p exch def
	yratio mul
	/y0p exch def
	xratio mul
	/x0p exch def
	Strgb setrgbcolor
	x0p y0p M anglep rotate sizep fntsize sp stringwidth exch -2 div exch rm sp show stroke angle2p rotate
} def
/Stxtr {
	/sp exch def
	yratio mul
	/sizep exch def
	dup
	/anglep exch def
	0 exch sub
	/angle2p exch def
	yratio mul
	/y0p exch def
	xratio mul
	/x0p exch def
	Strgb setrgbcolor
	x0p y0p M anglep rotate sizep fntsize sp stringwidth 1 index -1 mul exch rm pop sp show stroke angle2p rotate
} def
/Srect {
	/sfill exch def
	/sstroke exch def
	yratio mul
	/y1 exch def
	xratio mul
	/x1 exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	newpath x0 y0 moveto x0 y1 lineto x1 y1 lineto x1 y0 lineto x0 y0 lineto closepath
	sfill Sfill
	sstroke Sstroke
} def
/Sellipse {
	/sfill exch def
	/sstroke exch def
	yratio mul
	/yrad exch def
	xratio mul
	/xrad exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	/savematrix matrix currentmatrix def
	x y translate
	xrad yrad scale
	0 0 1 0 360 arc
	savematrix setmatrix
	sfill Sfill
	sstroke Sstroke
} def
/Stri {
	/sfill exch def
	/sstroke exch def
	xratio mul
	/r exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	/xcen x0 def
	y0 r add
	/ytop exch def
	r 2 div
	y0 exch sub
	/ybot exch def
	r 3 sqrt 2 div mul dup
	xcen exch sub
	/xleft exch def
	xcen add
	/xright exch def
	newpath xcen ytop moveto xright ybot lineto xleft ybot lineto xcen ytop lineto closepath
	sfill Sfill
	sstroke Sstroke
} def
/Soldtri {
	/sfill exch def
	xratio mul
	/r exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	x0 r sub
	/x1 exch def
	y0 r sub
	/y1 exch def
	x0 r add
	/x2 exch def
	y0 r sub
	/y2 exch def
	/x3 x0 def
	y0 r add
	/y3 exch def
	newpath x1 y1 moveto x2 y2 lineto x3 y3 lineto x1 y1 lineto closepath
	sfill 1 eq {
		Ssrgb setrgbcolor
		gsave
		fill
		grestore
	} if
	Slw setlinewidth
	Slrgb setrgbcolor
	stroke
} def
/Sdia {
	/sfill exch def
	/sstroke exch def
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x r sub
	/x0 exch def
	/y0 y def
	/x1 x def
	y r sub
	/y1 exch def
	x r add
	/x2 exch def
	/y2 y def
	/x3 x def
	y r add
	/y3 exch def
	newpath x0 y0 moveto x1 y1 lineto x2 y2 lineto x3 y3 lineto closepath
	sfill Sfill
	sstroke Sstroke
} def
/Scc {
	/sfill exch def
	/sstroke exch def
	xratio mul
	/r0 exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	x0 y0 r0 0 360 arc closepath
	sfill Sfill
	sstroke Sstroke
} def
/Spie {
	/sfill exch def
	/salign exch def
	/a1 exch def
	/a0 exch def
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	/Pie {
		x y moveto x y r a0 a1 arc closepath
	} def
	newpath Pie
	sfill Sfill
	Slrgb setrgbcolor
	salign 0 eq {
		gsave
		Slw 2 mul setlinewidth
		clip
		stroke
		grestore
	} if
	salign 1 eq {
		Slw setlinewidth
		stroke
	} if
	salign 2 eq {
		gsave
		Slw 2 mul setlinewidth
		strokepath
		pathbbox
		/ury exch def
		/urx exch def
		/lly exch def
		/llx exch def
		newpath llx lly moveto llx ury lineto urx ury lineto urx lly lineto closepath
		Pie
		eoclip
		newpath Pie
		stroke
		grestore
	} if
	newpath
} def
/Splu {
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x r sub
	/x0 exch def
	x r add
	/x1 exch def
	x0 y M x1 y L
	y r sub
	/y0 exch def
	y r add
	/y1 exch def
	x y0 M x y1 L
} def
/Scro {
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x r sub
	/x0 exch def
	y r sub
	/y0 exch def
	x r add
	/x1 exch def
	y r add
	/y1 exch def
	x0 y0 M x1 y1 L
	x r add
	/x0 exch def
	y r sub
	/y0 exch def
	x r sub
	/x1 exch def
	y r add
	/y1 exch def
	x0 y0 M x1 y1 L
} def
/Sm {
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x y M
} def
/Sl {
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x y L
} def
/SPl {
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x y PL
} def
/Sarr {
	/sfill exch def
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	y r add
	/ytop exch def
	y r sub
	/ybot exch def
	gsave
	Slrgb setrgbcolor
	sfill 0 eq {
		r 2 mul 3 div dup
		x exch sub
		/xleft exch def
		x add
		/xright exch def
		newpath xleft y moveto x ytop lineto xright y lineto x ytop moveto x ybot lineto
		Lcs
		1 setlinejoin
	} {
		r 2 div dup
		x exch sub
		/xleft exch def
		x add
		/xright exch def
		newpath xleft y moveto x ytop lineto xright y lineto x ytop closepath moveto x ybot lineto
		gsave
		fill
		grestore
	} ifelse
	Slw setlinewidth
	stroke
	grestore
} def
/Spipe {
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	y r sub
	/y0 exch def
	y r add
	/y1 exch def
	x y0 M x y1 L
} def
/Sv {
	xratio mul
	/r exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	/xcen x0 def
	y0 r add
	/ytop exch def
	r 2 div
	y0 exch sub
	/ybot exch def
	r 3 sqrt 2 div mul dup
	xcen exch sub
	/xleft exch def
	xcen add
	/xright exch def
	newpath xleft ytop moveto xcen ybot lineto xright ytop lineto
	Slw setlinewidth
	Slrgb setrgbcolor
	stroke
} def
/Lcs {
	currentlinecap
	1 setlinecap
} def
/Lcr {
	setlinecap
} def
/Sbp {
	newpath
} def
/Sep {
	/sfill exch def
	closepath
	/salign exch def
	Lcs
	salign 0 eq {
		sfill Sfill
		gsave
		Slw 2 mul setlinewidth
		clip
		Slrgb setrgbcolor
		stroke
		grestore
	} if
	salign 1 eq {
		sfill Sfill
		Slw setlinewidth
		Slrgb setrgbcolor
		stroke
	} if
	salign 2 eq {
		gsave
		Slw 2 mul setlinewidth
		Slrgb setrgbcolor
		stroke
		grestore
		sfill Sfill
	} if
	newpath
	Lcr
} def
/Stransrot {
	/anglep exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x y translate
	anglep rotate
	x neg y neg translate
} def
/cp {currentpoint} def 
/M {moveto} def 
/rm {rmoveto} def 
/S {stroke} def 
/L {Slw setlinewidth Slrgb setrgbcolor lineto Lcs S Lcr} def 
/PL {Slw setlinewidth Slrgb setrgbcolor lineto} def 
/MF-Helvetica {
  /newfontname exch def
  /fontname exch def
  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def
  fontdict {
  exch dup /FID eq {pop pop} {exch newfont 3 1 roll put} ifelse
  } forall
  newfont /FontName newfontname put
  newfont /Encoding ISOLatin1Encoding put
  newfontname newfont definefont pop
} def
/Helvetica /Helvetica-0 MF-Helvetica
/Slw 0.120 def
1.000 1.000 1.000 setrgbcolor
0 0 720.000 720.000 Sbgfill
/Sfill {
	/sfill exch def
	sfill 1 eq {
		Ssrgb setrgbcolor
		gsave
		fill
		grestore
	} if
} def
/Sstroke {
	/sstroke exch def
	sstroke 1 eq {
		Slw setlinewidth
		Slrgb setrgbcolor
		stroke
	} if
	newpath
} def
/Slrgb {1.000 1.000 1.000} def
/Strgb {1.000 1.000 1.000} def
/Ssrgb {1.000 1.000 1.000} def
/Slw 1.440 def
0 0 32000 32000 0 1 Srect
32 32 31968 31968 1 0 Srect
/Slrgb {0.000 0.000 0.000} def
3591 2708 31616 31616 0 0 Srect
3623 2740 31584 31584 1 0 Srect
/Strgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 5583 31616 5583 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 8298 31616 8298 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 11013 31616 11013 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 13727 31616 13727 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 16442 31616 16442 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 19157 31616 19157 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 21872 31616 21872 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 24586 31616 24586 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.941 0.941 0.941} def
3591 27301 31616 27301 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.878 0.878 0.878} def
3591 2868 31616 2868 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.878 0.878 0.878} def
3591 8298 31616 8298 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.878 0.878 0.878} def
3591 13727 31616 13727 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.878 0.878 0.878} def
3591 19157 31616 19157 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.878 0.878 0.878} def
3591 24586 31616 24586 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.120 def
/Slrgb {0.878 0.878 0.878} def
3591 30016 31616 30016 Sln
/Slw 1.440 def
/Slrgb {0.000 0.000 0.000} def
/Ssrgb {0.412 0.569 0.616} def
/Slw 1.080 def
/Slrgb {0.267 0.463 0.522} def
5191 2868 8738 19674 0 1 Srect
5215 2892 8714 19650 1 0 Srect
19377 2868 22923 15423 0 1 Srect
19401 2892 22899 15399 1 0 Srect
/Ssrgb {0.702 0.702 0.702} def
/Slw 1.440 def
/Slrgb {0.251 0.251 0.251} def
6965 22622 6965 16726 Sln
6721 16726 Sm
7210 16726 Sl
6721 22622 Sm
7210 22622 Sl
21150 17927 21150 12920 Sln
20906 12920 Sm
21395 12920 Sl
20906 17927 Sm
21395 17927 Sl
/Ssrgb {0.992 0.804 0.502} def
/Slw 1.080 def
/Slrgb {0.988 0.753 0.376} def
8738 2868 12284 19459 0 1 Srect
8762 2892 12260 19435 1 0 Srect
22923 2868 26470 20695 0 1 Srect
22947 2892 26446 20671 1 0 Srect
/Ssrgb {0.400 0.400 0.400} def
/Slw 1.440 def
/Slrgb {0.251 0.251 0.251} def
10511 22578 10511 16339 Sln
10267 16339 Sm
10756 16339 Sl
10267 22578 Sm
10756 22578 Sl
24696 24414 24696 16976 Sln
24452 16976 Sm
24941 16976 Sl
24452 24414 Sm
24941 24414 Sl
/Ssrgb {0.600 0.600 0.600} def
/Slw 1.080 def
/Slrgb {0.502 0.502 0.502} def
12284 2868 15831 12664 0 1 Srect
12308 2892 15807 12640 1 0 Srect
26470 2868 30016 14948 0 1 Srect
26494 2892 29992 14924 1 0 Srect
/Ssrgb {0.804 0.804 0.804} def
/Slw 1.440 def
/Slrgb {0.251 0.251 0.251} def
14057 13988 14057 11340 Sln
13813 11340 Sm
14302 11340 Sl
13813 13988 Sm
14302 13988 Sl
28243 16410 28243 13487 Sln
27999 13487 Sm
28488 13487 Sl
27999 16410 Sm
28488 16410 Sl
/Slrgb {0.000 0.000 0.000} def
3591 2708 3591 31616 Sln
3591 2868 3369 2868 Sln
3591 5583 3369 5583 Sln
3591 8298 3369 8298 Sln
3591 11013 3369 11013 Sln
3591 13727 3369 13727 Sln
3591 16442 3369 16442 Sln
3591 19157 3369 19157 Sln
3591 21872 3369 21872 Sln
3591 24586 3369 24586 Sln
3591 27301 3369 27301 Sln
3591 30016 3369 30016 Sln
3591 2868 3147 2868 Sln
2698 2650 0
/Helvetica-0 findfont 880 yratio mul scalefont setfont
(0.00) stringwidth pop add
xratio div
dup 4 3 roll exch 45.000 cos mul sub 3 1 roll 45.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
45.000 880
(0.00) Stxtl
(0.00) stringwidth pop xratio div
dup 4 3 roll exch 45.000 cos mul add 3 1 roll 45.000 sin mul add 2 copy
pop pop pop pop
3591 8298 3147 8298 Sln
2698 8080 0
/Helvetica-0 findfont 880 yratio mul scalefont setfont
(0.20) stringwidth pop add
xratio div
dup 4 3 roll exch 45.000 cos mul sub 3 1 roll 45.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
45.000 880
(0.20) Stxtl
(0.20) stringwidth pop xratio div
dup 4 3 roll exch 45.000 cos mul add 3 1 roll 45.000 sin mul add 2 copy
pop pop pop pop
3591 13727 3147 13727 Sln
2698 13509 0
/Helvetica-0 findfont 880 yratio mul scalefont setfont
(0.40) stringwidth pop add
xratio div
dup 4 3 roll exch 45.000 cos mul sub 3 1 roll 45.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
45.000 880
(0.40) Stxtl
(0.40) stringwidth pop xratio div
dup 4 3 roll exch 45.000 cos mul add 3 1 roll 45.000 sin mul add 2 copy
pop pop pop pop
3591 19157 3147 19157 Sln
2698 18939 0
/Helvetica-0 findfont 880 yratio mul scalefont setfont
(0.60) stringwidth pop add
xratio div
dup 4 3 roll exch 45.000 cos mul sub 3 1 roll 45.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
45.000 880
(0.60) Stxtl
(0.60) stringwidth pop xratio div
dup 4 3 roll exch 45.000 cos mul add 3 1 roll 45.000 sin mul add 2 copy
pop pop pop pop
3591 24586 3147 24586 Sln
2698 24368 0
/Helvetica-0 findfont 880 yratio mul scalefont setfont
(0.80) stringwidth pop add
xratio div
dup 4 3 roll exch 45.000 cos mul sub 3 1 roll 45.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
45.000 880
(0.80) Stxtl
(0.80) stringwidth pop xratio div
dup 4 3 roll exch 45.000 cos mul add 3 1 roll 45.000 sin mul add 2 copy
pop pop pop pop
3591 30016 3147 30016 Sln
2698 29798 0
/Helvetica-0 findfont 880 yratio mul scalefont setfont
(1.00) stringwidth pop add
xratio div
dup 4 3 roll exch 45.000 cos mul sub 3 1 roll 45.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
45.000 880
(1.00) Stxtl
(1.00) stringwidth pop xratio div
dup 4 3 roll exch 45.000 cos mul add 3 1 roll 45.000 sin mul add 2 copy
pop pop pop pop
3591 2708 31616 2708 Sln
10511 2708 10511 2264 Sln
/Helvetica-Oblique findfont
		dup length dict begin
		{1 index /FID ne {def} {pop pop} ifelse} forall
		/Encoding ISOLatin1Encoding def
		currentdict
end
/MF-Helvetica-Oblique {
  /newfontname exch def
  /fontname exch def
  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def
  fontdict {
  exch dup /FID eq {pop pop} {exch newfont 3 1 roll put} ifelse
  } forall
  newfont /FontName newfontname put
  newfont /Encoding ISOLatin1Encoding put
  newfontname newfont definefont pop
} def
/Helvetica-Oblique /Helvetica-Oblique-0 MF-Helvetica-Oblique
10511 981 0
/Helvetica-0 findfont 880 yratio mul scalefont setfont
(Replicated ) stringwidth pop add
/Helvetica-Oblique-0 findfont 880 yratio mul scalefont setfont
(p) stringwidth pop add
/Helvetica-0 findfont 880 yratio mul scalefont setfont
( < 0.05) stringwidth pop add
2 div xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 880
(Replicated ) Stxtl
(Replicated ) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-Oblique-0 findfont exch scalefont setfont } def
0.000 880
(p) Stxtl
(p) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 880
( < 0.05) Stxtl
( < 0.05) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
24696 2708 24696 2264 Sln
24696 981 0
/Helvetica-0 findfont 880 yratio mul scalefont setfont
(Relative Effect Size) stringwidth pop add
2 div xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 880
(Relative Effect Size) Stxtl
(Relative Effect Size) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
/Ssrgb {1.000 1.000 1.000} def
3911 26807 23914 31296 0 1 Srect
3943 26839 23882 31264 1 0 Srect
/Ssrgb {0.412 0.569 0.616} def
/Slw 1.080 def
/Slrgb {0.267 0.463 0.522} def
4391 30056 5031 30696 0 1 Srect
4415 30080 5007 30672 1 0 Srect
/Ssrgb {0.992 0.804 0.502} def
/Slrgb {0.988 0.753 0.376} def
4391 28732 5031 29372 0 1 Srect
4415 28756 5007 29348 1 0 Srect
/Ssrgb {0.600 0.600 0.600} def
/Slrgb {0.502 0.502 0.502} def
4391 27407 5031 28047 0 1 Srect
4415 27431 5007 28023 1 0 Srect
5698 30068 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 880
(Social Sciences Replication Project) Stxtl
(Social Sciences Replication Project) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
5698 28744 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 880
(Experimental Economics Replicaton Project) Stxtl
(Experimental Economics Replicaton Project) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
5698 27419 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 880
(Replication Project: Psychology) Stxtl
(Replication Project: Psychology) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
S showpage
%%EOF
